/*
 * CreaseConfigurer.java
 * 
 * This file is part of Tectonic Tiles.
 * Tectonic Tiles is a random terrain generator inspired by plate tectonics.
 * Copyright (C) 2020 Javier Centeno Vega
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program. If not, see <http://www.gnu.org/licenses/>.
 */

package io;

import core.Crease;
import parameter.parameter.Configurer;

/**
 * Configurer which handles instancing of crease functions and the parameters
 * related to the instancing of crease functions.
 *
 * @author Javier Centeno Vega <jacenve@telefonica.net>
 * @version 0.3
 * @since 0.3
 * @param <C> The type of crease handled by this configurer.
 * @see core.Crease
 *
 */
public abstract class CreaseConfigurer<C extends Crease> extends Configurer {

	////////////////////////////////////////////////////////////////////////////////
	// Parameters

	protected C crease;

	////////////////////////////////////////////////////////////////////////////////
	// Constructors

	/**
	 * Construct a new crease configurer with default parameters.
	 * 
	 * @param nameKey The internationalization key for the name of the configurer.
	 */
	public CreaseConfigurer(String nameKey) {
		super(nameKey);
	}

	////////////////////////////////////////////////////////////////////////////////
	// Accessors

	/**
	 * Get the crease generated by this configurer if a crease has been generated.
	 * 
	 * @return A crease, or null if no crease has been generated.
	 */
	public C getCrease() {
		return crease;
	}

	////////////////////////////////////////////////////////////////////////////////
	// Instance methods

	/**
	 * Generate a crease.
	 * 
	 * @return A crease.
	 */
	public abstract C generate();

}
